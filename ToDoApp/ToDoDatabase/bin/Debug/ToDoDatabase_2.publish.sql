/*
Deployment script for TaskDatabase

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "TaskDatabase"
:setvar DefaultFilePrefix "TaskDatabase"
:setvar DefaultDataPath "C:\Users\lukis\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"
:setvar DefaultLogPath "C:\Users\lukis\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB\"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [$(DatabaseName)];


GO
/*
The column [dbo].[Task].[Status] on table [dbo].[Task] must be added, but the column has no default value and does not allow NULL values. If the table contains data, the ALTER script will not work. To avoid this issue you must either: add a default value to the column, mark it as allowing NULL values, or enable the generation of smart-defaults as a deployment option.
*/

IF EXISTS (select top 1 1 from [dbo].[Task])
    RAISERROR (N'Rows were detected. The schema update is terminating because data loss might occur.', 16, 127) WITH NOWAIT

GO
PRINT N'Altering Table [dbo].[Task]...';


GO
ALTER TABLE [dbo].[Task]
    ADD [Status] NVARCHAR (50) NOT NULL;


GO
PRINT N'Refreshing View [dbo].[FullTask]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[FullTask]';


GO
PRINT N'Creating View [dbo].[DoneTask]...';


GO
CREATE VIEW [dbo].[DoneTask]
	AS 
	SELECT * FROM dbo.Task
	WHERE Status = 'Done'
GO
PRINT N'Creating View [dbo].[UndoneTasks]...';


GO
CREATE VIEW [dbo].[UndoneTasks]
	AS 
	SELECT * FROM dbo.Task
	WHERE Status = 'Done'
GO
PRINT N'Creating Procedure [dbo].[spChangeTask]...';


GO
CREATE PROCEDURE [dbo].[spChangeTask]
	@TaskId int,
	@TaskName nvarchar(100),
	@TaskDescription text,
	@TaskExpirationDate date,
	@TaskStatus nvarchar(50)
AS
	UPDATE dbo.Task
	SET TaskName = @TaskName, Description = @TaskDescription, ExpirationDate = @TaskExpirationDate, Status = @TaskStatus
	WHERE Id = @TaskId
RETURN 0
GO
PRINT N'Creating Procedure [dbo].[spChangeTaskStatus]...';


GO
CREATE PROCEDURE [dbo].[spChangeTaskStatus]
	@TaskId int,
	@Status nvarchar(50)
AS
	UPDATE dbo.Task 
	SET Task.Status = @Status 
	WHERE Task.Id = @TaskId
GO
PRINT N'Refreshing Procedure [dbo].[spAddNewTask]...';


GO
EXECUTE sp_refreshsqlmodule N'[dbo].[spAddNewTask]';


GO
PRINT N'Update complete.';


GO
